<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.haima.crm.dao.ComplaintDelayDao">
	
	<resultMap id="RM_ComplaintDelay" type="com.haima.crm.entity.ComplaintDelay">
			<result property="id" column="id"/>
			<result property="complainId" column="complain_id"/>
			<result property="complainCode" column="complain_code"/>
			<result property="porposDate" column="porpos_date"/>
			<result property="delayReason" column="delay_reason"/>
			<result property="estimateFinishTime" column="estimate_finish_time"/>
			<result property="checker" column="checker"/>
			<result property="checkInfo" column="check_info"/>
			<result property="checkDate" column="check_date"/>
			<result property="delFlag" column="del_flag"/>
			<result property="createBy" column="create_by"/>
			<result property="createTime" column="create_time"/>
			<result property="updateBy" column="update_by"/>
			<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ComplaintDelay_columns">
	    <![CDATA[
			`id`, 			
			`complain_id`, 			
			`complain_code`, 			
			`porpos_date`, 			
			`delay_reason`, 			
			`estimate_finish_time`, 			
			`checker`, 			
			`check_info`, 			
			`check_date`, 			
			`del_flag`, 			
			`create_by`, 			
			`create_time`, 			
			`update_by`, 			
			`update_time`			
	    ]]>
	</sql>
	
	<!-- 用于where查询公用抽取的列 -->
	<sql id="ComplaintDelay_condition">
		<where>
        <trim suffix="" suffixOverrides="and">
			<if test="complainId != null and complainId != ''">
				`complain_id` = #{complainId} and 			
			</if>
			<if test="complainCode != null and complainCode != ''">
				`complain_code` = #{complainCode} and 			
			</if>
			<if test="porposDate != null and porposDate != ''">
				`porpos_date` = #{porposDate} and 			
			</if>
			<if test="delayReason != null and delayReason != ''">
				`delay_reason` = #{delayReason} and 			
			</if>
			<if test="estimateFinishTime != null and estimateFinishTime != ''">
				`estimate_finish_time` = #{estimateFinishTime} and 			
			</if>
			<if test="checker != null and checker != ''">
				`checker` = #{checker} and 			
			</if>
			<if test="checkInfo != null and checkInfo != ''">
				`check_info` = #{checkInfo} and 			
			</if>
			<if test="checkDate != null and checkDate != ''">
				`check_date` = #{checkDate} and 			
			</if>
			<if test="delFlag != null and delFlag != ''">
				`del_flag` = #{delFlag} and 			
			</if>
			<if test="createBy != null and createBy != ''">
				`create_by` = #{createBy} and 			
			</if>
			<if test="createTime != null and createTime != ''">
				`create_time` = #{createTime} and 			
			</if>
			<if test="updateBy != null and updateBy != ''">
				`update_by` = #{updateBy} and 			
			</if>
			<if test="updateTime != null and updateTime != ''">
				`update_time` = #{updateTime}			
			</if>
        </trim>
		</where>
	</sql>
	
	<select id="queryObject" resultMap="RM_ComplaintDelay">
		select 
		<include refid="ComplaintDelay_columns" />
		from t_complaint_delay 
		where
		id = #{value}
	</select>

	<select id="queryList" resultMap="RM_ComplaintDelay">
		select 
		<include refid="ComplaintDelay_columns" />
		from t_complaint_delay
		<include refid="ComplaintDelay_condition"/> 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="java.lang.Integer">
		select 
		count(1) 
		from t_complaint_delay 
		<include refid="ComplaintDelay_condition"/>
	</select>
	 
	<insert id="save" parameterType="com.haima.crm.entity.ComplaintDelay" useGeneratedKeys="true" keyProperty="id">
		insert into t_complaint_delay
		(
		<trim suffix="" suffixOverrides=",">
			<if test="complainId!=null and complainId!=''">
				complain_id, 			
			</if>
			<if test="complainCode!=null and complainCode!=''">
				complain_code, 			
			</if>
			<if test="porposDate!=null and porposDate!=''">
				porpos_date, 			
			</if>
			<if test="delayReason!=null and delayReason!=''">
				delay_reason, 			
			</if>
			<if test="estimateFinishTime!=null and estimateFinishTime!=''">
				estimate_finish_time, 			
			</if>
			<if test="checker!=null and checker!=''">
				checker, 			
			</if>
			<if test="checkInfo!=null and checkInfo!=''">
				check_info, 			
			</if>
			<if test="checkDate!=null and checkDate!=''">
				check_date, 			
			</if>
			<if test="delFlag!=null and delFlag!=''">
				del_flag, 			
			</if>
			<if test="createBy!=null and createBy!=''">
				create_by, 			
			</if>
			<if test="createTime!=null and createTime!=''">
				create_time, 			
			</if>
			<if test="updateBy!=null and updateBy!=''">
				update_by, 			
			</if>
			<if test="updateTime!=null and updateTime!=''">
				update_time			
			</if>
	     </trim>
		)
		values
		(
		<trim suffix="" suffixOverrides=",">
			<if test="complainId!=null and complainId!=''">
				#{complainId}, 			
			</if>
			<if test="complainCode!=null and complainCode!=''">
				#{complainCode}, 			
			</if>
			<if test="porposDate!=null and porposDate!=''">
				#{porposDate}, 			
			</if>
			<if test="delayReason!=null and delayReason!=''">
				#{delayReason}, 			
			</if>
			<if test="estimateFinishTime!=null and estimateFinishTime!=''">
				#{estimateFinishTime}, 			
			</if>
			<if test="checker!=null and checker!=''">
				#{checker}, 			
			</if>
			<if test="checkInfo!=null and checkInfo!=''">
				#{checkInfo}, 			
			</if>
			<if test="checkDate!=null and checkDate!=''">
				#{checkDate}, 			
			</if>
			<if test="delFlag!=null and delFlag!=''">
				#{delFlag}, 			
			</if>
			<if test="createBy!=null and createBy!=''">
				#{createBy}, 			
			</if>
			<if test="createTime!=null and createTime!=''">
				#{createTime}, 			
			</if>
			<if test="updateBy!=null and updateBy!=''">
				#{updateBy}, 			
			</if>
			<if test="updateTime!=null and updateTime!=''">
				#{updateTime}			
			</if>
	     </trim>
		)
	</insert>
	 
	<update id="update" parameterType="com.haima.crm.entity.ComplaintDelay">
		update t_complaint_delay 
		<set>
			<if test="complainId != null and complainId!=''">
				`complain_id` = #{complainId}, 			
			</if>
			<if test="complainCode != null and complainCode!=''">
				`complain_code` = #{complainCode}, 			
			</if>
			<if test="porposDate != null and porposDate!=''">
				`porpos_date` = #{porposDate}, 			
			</if>
			<if test="delayReason != null and delayReason!=''">
				`delay_reason` = #{delayReason}, 			
			</if>
			<if test="estimateFinishTime != null and estimateFinishTime!=''">
				`estimate_finish_time` = #{estimateFinishTime}, 			
			</if>
			<if test="checker != null and checker!=''">
				`checker` = #{checker}, 			
			</if>
			<if test="checkInfo != null and checkInfo!=''">
				`check_info` = #{checkInfo}, 			
			</if>
			<if test="checkDate != null and checkDate!=''">
				`check_date` = #{checkDate}, 			
			</if>
			<if test="delFlag != null and delFlag!=''">
				`del_flag` = #{delFlag}, 			
			</if>
			<if test="createBy != null and createBy!=''">
				`create_by` = #{createBy}, 			
			</if>
			<if test="createTime != null and createTime!=''">
				`create_time` = #{createTime}, 			
			</if>
			<if test="updateBy != null and updateBy!=''">
				`update_by` = #{updateBy}, 			
			</if>
			<if test="updateTime != null and updateTime!=''">
				`update_time` = #{updateTime}			
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_complaint_delay where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_complaint_delay where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>