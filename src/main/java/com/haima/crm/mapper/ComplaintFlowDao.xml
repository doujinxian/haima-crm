<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.haima.crm.dao.ComplaintFlowDao">
	
	<resultMap id="RM_ComplaintFlow" type="com.haima.crm.entity.ComplaintFlow">
			<result property="id" column="id"/>
			<result property="complainId" column="complain_id"/>
			<result property="store" column="store"/>
			<result property="proposer" column="proposer"/>
			<result property="callbackStatus" column="callback_status"/>
			<result property="callbackTime" column="callback_time"/>
			<result property="checker" column="checker"/>
			<result property="porposDate" column="porpos_date"/>
			<result property="checkInfo" column="check_info"/>
			<result property="checkStatus" column="check_status"/>
			<result property="checkDate" column="check_date"/>
			<result property="createBy" column="create_by"/>
			<result property="createTime" column="create_time"/>
			<result property="updateBy" column="update_by"/>
			<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ComplaintFlow_columns">
	    <![CDATA[
			`id`, 			
			`complain_id`, 			
			`store`, 			
			`proposer`, 			
			`callback_status`, 			
			`callback_time`, 			
			`checker`, 			
			`porpos_date`, 			
			`check_info`, 			
			`check_status`, 			
			`check_date`, 			
			`create_by`, 			
			`create_time`, 			
			`update_by`, 			
			`update_time`			
	    ]]>
	</sql>
	
	<!-- 用于where查询公用抽取的列 -->
	<sql id="ComplaintFlow_condition">
		<where>
        <trim suffix="" suffixOverrides="and">
			<if test="complainId != null and complainId != ''">
				`complain_id` = #{complainId} and 			
			</if>
			<if test="store != null and store != '' ">
				`store` = #{store} and 			
			</if>
			<if test="proposer != null and proposer != ''">
				`proposer` = #{proposer} and 			
			</if>
			<if test="callbackStatus != null and callbackStatus != ''">
				`callback_status` = #{callbackStatus} and 			
			</if>
			<if test="callbackTime != null">
				`callback_time` = #{callbackTime} and 			
			</if>
			<if test="checker != null and checker != ''">
				`checker` = #{checker} and 			
			</if>
			<if test="porposDate != null">
				`porpos_date` = #{porposDate} and 			
			</if>
			<if test="checkInfo != null and checkInfo != ''">
				`check_info` = #{checkInfo} and 			
			</if>
			<if test="checkStatus != null and checkStatus != 0 ">
				`check_status` = #{checkStatus} and 			
			</if>
			<if test="checkDate != null">
				`check_date` = #{checkDate} and 			
			</if>
			<if test="createBy != null and createBy != ''">
				`create_by` = #{createBy} and 			
			</if>
			<if test="createTime != null">
				`create_time` = #{createTime} and 			
			</if>
			<if test="updateBy != null and updateBy != ''">
				`update_by` = #{updateBy} and 			
			</if>
			<if test="updateTime != null">
				`update_time` = #{updateTime}	 and	
			</if>
			<if test="complaintIds != null">
				complain_id in 
				<foreach item="complaintId" collection="complaintIds" open="(" separator="," close=")">
					#{complaintId}
				</foreach>	
			</if>
        </trim>
		</where>
	</sql>
	
	<select id="queryObject" resultMap="RM_ComplaintFlow">
		select 
		<include refid="ComplaintFlow_columns" />
		from t_complaint_audit 
		where
		id = #{value}
	</select>

	<select id="queryList" resultMap="RM_ComplaintFlow">
		select 
		<include refid="ComplaintFlow_columns" />
		from t_complaint_audit
		<include refid="ComplaintFlow_condition"/> 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="java.lang.Integer">
		select 
		count(1) 
		from t_complaint_audit 
		<include refid="ComplaintFlow_condition"/>
	</select>
	 
	<insert id="save" parameterType="com.haima.crm.entity.ComplaintFlow" useGeneratedKeys="true" keyProperty="id">
		insert into t_complaint_audit
		(
		<trim suffix="" suffixOverrides=",">
			<if test="complainId!=null and complainId != ''">
				complain_id, 			
			</if>
			<if test="store!=null and store != '' ">
				store, 			
			</if>
			<if test="proposer!=null and proposer != ''">
				proposer, 			
			</if>
			<if test="callbackStatus!=null and callbackStatus != ''">
				callback_status, 			
			</if>
			<if test="callbackTime!=null">
				callback_time, 			
			</if>
			<if test="checker!=null and checker != ''">
				checker, 			
			</if>
			<if test="porposDate!=null">
				porpos_date, 			
			</if>
			<if test="checkInfo!=null and checkInfo != ''">
				check_info, 			
			</if>
			<if test="checkStatus!=null and checkStatus != 0 ">
				check_status, 			
			</if>
			<if test="checkDate!=null">
				check_date, 			
			</if>
			<if test="createBy!=null and createBy != ''">
				create_by, 			
			</if>
			<if test="createTime!=null">
				create_time, 			
			</if>
			<if test="updateBy!=null and updateBy != ''">
				update_by, 			
			</if>
			<if test="updateTime!=null">
				update_time			
			</if>
	     </trim>
		)
		values
		(
		<trim suffix="" suffixOverrides=",">
			<if test="complainId!=null and complainId != ''">
				#{complainId}, 			
			</if>
			<if test="store!=null and store != '' ">
				#{store}, 			
			</if>
			<if test="proposer!=null and proposer != ''">
				#{proposer}, 			
			</if>
			<if test="callbackStatus!=null and callbackStatus != ''">
				#{callbackStatus}, 			
			</if>
			<if test="callbackTime!=null">
				#{callbackTime}, 		
			</if>
			<if test="checker!=null and checker != ''">
				#{checker}, 			
			</if>
			<if test="porposDate!=null">
				#{porposDate}, 			
			</if>
			<if test="checkInfo!=null and checkInfo != ''">
				#{checkInfo}, 			
			</if>
			<if test="checkStatus!=null and checkStatus != 0 ">
				#{checkStatus}, 			
			</if>
			<if test="checkDate!=null">
				#{checkDate}, 			
			</if>
			<if test="createBy!=null and createBy != ''">
				#{createBy}, 			
			</if>
			<if test="createTime!=null">
				#{createTime}, 			
			</if>
			<if test="updateBy!=null and updateBy != ''">
				#{updateBy}, 			
			</if>
			<if test="updateTime!=null">
				#{updateTime}			
			</if>
	     </trim>
		)
	</insert>
	 
	<update id="update" parameterType="com.haima.crm.entity.ComplaintFlow">
		update t_complaint_audit 
		<set>
			<if test="complainId != null and complainId != ''">
				`complain_id` = #{complainId}, 			
			</if>
			<if test="store != null and store != '' ">
				`store` = #{store}, 			
			</if>
			<if test="proposer != null and proposer != ''">
				`proposer` = #{proposer}, 			
			</if>
			<if test="callbackStatus!=null and callbackStatus != ''">
				`callback_status` = #{callbackStatus}, 			
			</if>
			<if test="callbackTime!=null">
				`callback_time` = #{callbackTime}, 		
			</if>
			<if test="checker != null and checker != ''">
				`checker` = #{checker}, 			
			</if>
			<if test="porposDate != null">
				`porpos_date` = #{porposDate}, 			
			</if>
			<if test="checkInfo != null and checkInfo != ''">
				`check_info` = #{checkInfo}, 			
			</if>
			<if test="checkStatus != null and checkStatus != 0 ">
				`check_status` = #{checkStatus}, 			
			</if>
			<if test="checkDate != null">
				`check_date` = #{checkDate}, 			
			</if>
			<if test="createBy != null and createBy != ''">
				`create_by` = #{createBy}, 			
			</if>
			<if test="createTime != null">
				`create_time` = #{createTime}, 			
			</if>
			<if test="updateBy != null and updateBy != ''">
				`update_by` = #{updateBy}, 			
			</if>
			<if test="updateTime != null">
				`update_time` = #{updateTime}			
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_complaint_audit where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_complaint_audit where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>